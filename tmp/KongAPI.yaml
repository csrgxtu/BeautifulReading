# this is an example of the Uber API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: Kong API
  description: Kong API Gateway's API
  version: "1.0.0"
paths:
  /:
    get:
      summary: Retrieve node informations
      description: Retrieve installation details about a node.
      responses:
        200:
          description: HTTP 200 OK
          schema:
            type: object
            properties:
              hostname:
                type: string
              lua_version:
                type: string
              tagline:
                type: string
              version:
                type: string
              plugins:
                type: object
                properties:
                  available_on_server:
                    type: array
                    items:
                      type: string
  /status:
    get:
      summary: Retrieve node status
      description: Retrieve usage informations about a node, with some basic information about the connections being processed by the underlying nginx process. Because Kong is built on top of nginx, every existing nginx monitoring tool or agent can also be used.
      responses:
        200:
          description: HTTP 200 OK
          schema:
            type: object
            properties:
              total_requests:
                type: integer
              connections_active:
                type: integer
              connections_accepted:
                type: integer
              connections_handled:
                type: integer
              connections_reading:
                type: integer
              connections_writing:
                type: integer
              connections_waiting:
                type: integer
  
  /apis:
    post:
      summary: Add API
      description: Add API
      parameters:
        - name: name
          in: query
          description: The API name. If none is specified, will default to the public_dns.
          type: string
        - name: public_dns
          in: query
          description: The public DNS address that points to your API. For example, mockbin.com. At least public_dns or path or both should be specified.
          type: string
        - name: path
          in: query
          description: The public path that points to your API. For example, /someservice. At least public_dns or path or both should be specified.
          type: string
        - name: strip_path
          in: query
          description: Strip the path value before proxying the request to the final API. For example a request made to /someservice/hello will be resolved to target_url/hello. By default is false.
          type: string
        - name: preserve_host
          in: query
          description: Preserves the original Host header sent by the client, instead of replacing it with the hostname of the target_url. By default is false.
          type: string
        - name: target_url
          in: query
          description: The base target URL that points to your API server, this URL will be used for proxying requests. For example, https://mockbin.com.
          required: true
          type: string
      responses:
        200:
          description: HTTP 201 Created
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              public_dns:
                type: string
              target_url:
                type: string
              preserve_host:
                type: string
              created_at:
                type: string
  
  /apis:
    get:
      summary: Retrieve API
      description: Retrieve API
      parameters:
        - name: name
          in: query
          description: The unique identifier or the name of the API to retrieve
          type: string
        - name: id
          in: query
          description: The unique identifier or the name of the API to retrieve
          type: string
      responses:
        200:
          description: HTTP 200 OK
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              public_dns:
                type: string
              target_url:
                type: string
              preserve_host:
                type: string
              created_at:
                type: string
  
  /apis:
    get:
      summary: List APIs
      description: List APIs
      parameters:
        - name: id
          in: query
          description: A filter on the list based on the apis id field.
          type: string
        - name: name
          in: query
          description: A filter on the list based on the apis name field.
          type: string
        - name: public_dns
          in: query
          description: A filter on the list based on the apis public_dns field.
          type: string
        - name: target_url
          in: query
          description: A filter on the list based on the apis target_url field.
          type: string
        - name: size
          in: query
          description: A limit on the number of objects to be returned.
          type: integer
        - name: offset
          in: query
          description: A cursor used for pagination. offset is an object identifier that defines a place in the list.
          type: integer
      responses:
        200:
          description: HTTP 200 OK
          schema:
            type: object
            properties:
              total:
                type: integer
              next:
                type: string
              data:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    public_dns:
                      type: string
                    target_url:
                      type: string
                    preserve_host:
                      type: string
                    created_at:
                      type: string
  
  /apis:
    patch:
      summary: Update API
      description: Update API
      parameters:
        - name: name
          in: query
          description: The unique identifier or the name of the API to update
          type: string
        - name: id
          in: query
          description: The unique identifier or the name of the API to update
          type: string
        - name: public_dns
          in: query
          description: The public DNS address that points to your API. For example, mockbin.com. At least public_dns or path or both should be specified.
          type: string
        - name: path
          in: query
          description: The public path that points to your API. For example, /someservice. At least public_dns or path or both should be specified.
          type: string
        - name: strip_path
          in: query
          description: Strip the path value before proxying the request to the final API. For example a request made to /someservice/hello will be resolved to target_url/hello. By default is false.
          type: string
        - name: preserve_host
          in: query
          description: Preserves the original Host header sent by the client, instead of replacing it with the hostname of the target_url. By default is false.
          type: string
        - name: target_url
          in: query
          description: The base target URL that points to your API server, this URL will be used for proxying requests. For example, https://mockbin.com.
          type: string
      responses:
        200:
          description: HTTP 200 OK
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              public_dns:
                type: string
              target_url:
                type: string
              preserve_host:
                type: string
              created_at:
                type: string
    
    /apis:
      put:
      summary: Update API
      description: Update API
      parameters:
        - name: name
          in: query
          description: The API name. If none is specified, will default to the public_dns.
          type: string
        - name: public_dns
          in: query
          description: The public DNS address that points to your API. For example, mockbin.com. At least public_dns or path or both should be specified.
          type: string
        - name: path
          in: query
          description: The public path that points to your API. For example, /someservice. At least public_dns or path or both should be specified.
          type: string
        - name: strip_path
          in: query
          description: Strip the path value before proxying the request to the final API. For example a request made to /someservice/hello will be resolved to target_url/hello. By default is false.
          type: string
        - name: preserve_host
          in: query
          description: Preserves the original Host header sent by the client, instead of replacing it with the hostname of the target_url. By default is false.
          type: string
        - name: target_url
          in: query
          description: The base target URL that points to your API server, this URL will be used for proxying requests. For example, https://mockbin.com.
          type: string
      responses:
        200:
          description: HTTP 200 OK
          schema:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              public_dns:
                type: string
              target_url:
                type: string
              preserve_host:
                type: string
              created_at:
                type: string
  
  /apis:
    delete:
      summary: Delete API
      description: Delete API
      parameters:
        - name: name
          in: query
          description: The unique identifier or the name of the API to delete
          type: string
        - name: id
          in: query
          description: The unique identifier or the name of the API to delete
          type: string
      responses:
        204:
          description: HTTP 204 NO CONTENT
  
  /consumers:
    post:
      summary: Create Consumer
      description: Create Consumer
      parameters:
        - name: username
          in: query
          description: The username of the consumer. You must send either this field or custom_id with the request.
          type: string
        - name: custom_id
          in: query
          description: Field for storing an existing ID for the consumer, useful for mapping Kong with users in your existing database. You must send either this field or username with the request.
          type: string
      responses:
        201:
          description: HTTP 201 Created
          schema:
            type: object
            properties:
              id:
                type: string
              custom_id:
                type: string
              created_at:
                type: string
  
  /consumer:
    get:
      summary: Retrieve Consumer
      description: Retrieve Consumer
      parameters:
        - name: username
          in: query
          description: The unique identifier or the username of the consumer to retrieve
          type: string
        - name: id
          in: query
          description: The unique identifier or the username of the consumer to retrieve
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: string
              custom_id:
                type: string
              created_at:
                type: integer
    
    /consumers:
      get:
        summary: List Consumers
        descriptions: List Consumers
        parameters:
          - name: id
            in: query
            description: A filter on the list based on the consumer id field.
            type: string
          - name: custom_id
            in: query
            description: A filter on the list based on the consumer custom_id field.
            type: string
          - name: username
            in: query
            description: A filter on the list based on the consumer username field.
            type: string
          - name: size
            in: query
            description: A limit on the number of objects to be returned.
            type: integer
          - name: offset
            in: query
            description: A cursor used for pagination. offset is an object identifier that defines a place in the list.
        response:
          200:
            description: ok
            schema:
              type: object
              properties:
                total_requests:
                  type: integer
                connections_active:
                  type: integer
                connections_accepted:
                  type: integer
                connections_handled:
                  type: integer
                connections_reading:
                  type: integer
                connections_writing:
                  type: integer
                connections_waiting:
                  type: integer
            
  /consumers:
    patch:
      summary: Update Consumer
      description: Update Consumer
      parameters:
        - name: username
          in: query
          description: The username of the consumer. You must send either this field or custom_id with the request.
          type: string
        - name: custom_id
          in: query
          description: Field for storing an existing ID for the consumer, useful for mapping Kong with users in your existing database. You must send either this field or username with the request.
          type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              id:
                type: string
              custom_id:
                type: string
              created_at:
                type: integer
  
  /consumers:
    put:
      summary: Update Or Create Consumer
      description: Update Or Create Consumer
      parameters:
        - name: username
          in: query
          description: The username of the consumer. You must send either this field or custom_id with the request.
          type: string
        - name: custom_id
          in: query
          description: Field for storing an existing ID for the consumer, useful for mapping Kong with users in your existing database. You must send either this field or username with the request.
          type: string
      responses:
        200:
          description: OK
  
  /consumers:
    ddelete:
      summary: Delete Consumer
      description: Delete Consumer
      parameters:
        - name: username
          in: query
          description: The unique identifier or the name of the consumer to delete
          type: string
        - name: id
          in: query
          description: The unique identifier or the name of the consumer to delete
          type: string
      responses:
        200:
          description: OK
    
    
  /products:
    get:
      summary: Product Types
      description: |
        The Products endpoint returns information about the *Uber* products
        offered at a given location. The response includes the display name
        and other details about each product, and lists the products in the
        proper display order.
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
      tags:
        - Products
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /estimates/price:
    get:
      summary: Price Estimates
      description: |
        The Price Estimates endpoint returns an estimated price range
        for each product offered at a given location. The price estimate is
        provided as a formatted string with the full price range and the localized
        currency symbol.<br><br>The response also includes low and high estimates,
        and the [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code for
        situations requiring currency conversion. When surge is active for a particular
        product, its surge_multiplier will be greater than 1, but the price estimate
        already factors in this multiplier.
      parameters:
        - name: start_latitude
          in: query
          description: Latitude component of start location.
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: end_latitude
          in: query
          description: Latitude component of end location.
          required: true
          type: number
          format: double
        - name: end_longitude
          in: query
          description: Longitude component of end location.
          required: true
          type: number
          format: double
      tags:
        - Estimates
      responses:
        200:
          description: An array of price estimates by product
          schema:
            type: array
            items:
              $ref: '#/definitions/PriceEstimate'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /estimates/time:
    get:
      summary: Time Estimates
      description: The Time Estimates endpoint returns ETAs for all products offered at a given location, with the responses expressed as integers in seconds. We recommend that this endpoint be called every minute to provide the most accurate, up-to-date ETAs.
      parameters:
        - name: start_latitude
          in: query
          description: Latitude component of start location.
          required: true
          type: number
          format: double
        - name: start_longitude
          in: query
          description: Longitude component of start location.
          required: true
          type: number
          format: double
        - name: customer_uuid
          in: query
          type: string
          format: uuid
          description: Unique customer identifier to be used for experience customization.
        - name: product_id
          in: query
          type: string
          description: Unique identifier representing a specific product for a given latitude & longitude.
      tags:
        - Estimates
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /me:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the Uber user that has authorized with the application.
      tags:
        - User
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /history:
    get:
      summary: User Activity
      description: The User Activity endpoint returns data about a user's lifetime activity with Uber. The response will include pickup locations and times, dropoff locations and times, the distance of past requests, and information about which products were requested.<br><br>The history array in the response will have a maximum length based on the limit parameter. The response value count may exceed limit, therefore subsequent API requests may be necessary.
      parameters:
        - name: offset
          in: query
          type: integer
          format: int32
          description: Offset the list of returned results by this amount. Default is zero.
        - name: limit
          in: query
          type: integer
          format: int32
          description: Number of items to retrieve. Default is 5, maximum is 100.
      tags:
        - User
      responses:
        200:
          description: History information for the given user
          schema:
            $ref: '#/definitions/Activities'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
definitions:
  Product:
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      description:
        type: string
        description: Description of product.
      display_name:
        type: string
        description: Display name of product.
      capacity:
        type: string
        description: Capacity of product. For example, 4 people.
      image:
        type: string
        description: Image URL representing the product.
  PriceEstimate:
    properties:
      product_id:
        type: string
        description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
      currency_code:
        type: string
        description: "[ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code."
      display_name:
        type: string
        description: Display name of product.
      estimate:
        type: string
        description: Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or "Metered" for TAXI.
      low_estimate:
        type: number
        description: Lower bound of the estimated price.
      high_estimate:
        type: number
        description: Upper bound of the estimated price.
      surge_multiplier:
        type: number
        description: Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
  Profile:
    properties:
      first_name:
        type: string
        description: First name of the Uber user.
      last_name:
        type: string
        description: Last name of the Uber user.
      email:
        type: string
        description: Email address of the Uber user
      picture:
        type: string
        description: Image URL of the Uber user.
      promo_code:
        type: string
        description: Promo code of the Uber user.
  Activity:
    properties:
      uuid:
        type: string
        description: Unique identifier for the activity
  Activities:
    properties:
      offset:
        type: integer
        format: int32
        description: Position in pagination.
      limit:
        type: integer
        format: int32
        description: Number of items to retrieve (100 max).
      count:
        type: integer
        format: int32
        description: Total number of items available.
      history:
        type: array
        items:
          $ref: '#/definitions/Activity'
  Error:
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
